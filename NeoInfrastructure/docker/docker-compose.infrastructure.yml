# NeoInfrastructure Development Environment
# Multi-region PostgreSQL setup with shared services
# Usage: docker-compose -f docker-compose.infrastructure.yml up -d

services:
  # ==============================================
  # REGION 1: US EAST (Primary Development Region)
  # ==============================================
  postgres-us-east:
    image: supabase/postgres:17.4.1.032
    container_name: neo-postgres-us-east
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres  # Must be 'postgres' for init scripts
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      
      # Region-specific metadata
      NEO_REGION_CODE: us-east-1
      NEO_REGION_NAME: "US East (Development)"
      NEO_GDPR_COMPLIANT: "false"
      NEO_CONNECTION_TYPE: primary
      
      # Performance tuning for development
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=en_US.UTF-8"
      POSTGRES_MAX_CONNECTIONS: ${POSTGRES_MAX_CONNECTIONS:-200}
      POSTGRES_SHARED_BUFFERS: ${POSTGRES_SHARED_BUFFERS:-256MB}
      POSTGRES_EFFECTIVE_CACHE_SIZE: ${POSTGRES_EFFECTIVE_CACHE_SIZE:-1GB}
      POSTGRES_WORK_MEM: ${POSTGRES_WORK_MEM:-4MB}
    volumes:
      - postgres_us_east_data:/var/lib/postgresql/data
      - ./postgres/init/00-init-databases.sql:/docker-entrypoint-initdb.d/00-shared-databases.sql:ro
      - ./postgres/init/02-keycloak-schema.sql:/docker-entrypoint-initdb.d/01-keycloak-schema.sql:ro
      - ./postgres/init-us/00-init-us-databases.sql:/docker-entrypoint-initdb.d/02-us-databases.sql:ro
      - ./postgres/init-us/02-setup-us-region.sql:/docker-entrypoint-initdb.d/03-us-config.sql:ro
    ports:
      - "${POSTGRES_US_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - neo-infrastructure
    command: >
      postgres
      -c shared_preload_libraries='pg_cron,pg_stat_statements'
      -c cron.database_name='neofast_admin'
      -c pg_stat_statements.track=all
      -c pg_stat_statements.max=10000
      -c log_statement='ddl'
      -c log_duration=off
      -c log_min_duration_statement=100
      -c listen_addresses='*'
      -c max_connections=${POSTGRES_MAX_CONNECTIONS:-200}
      -c shared_buffers=${POSTGRES_SHARED_BUFFERS:-256MB}
      -c effective_cache_size=${POSTGRES_EFFECTIVE_CACHE_SIZE:-1GB}
      -c work_mem=${POSTGRES_WORK_MEM:-4MB}
      -c maintenance_work_mem=${POSTGRES_MAINTENANCE_WORK_MEM:-256MB}

  # ==============================================
  # REGION 2: EU WEST (GDPR Compliant Region)
  # ==============================================
  postgres-eu-west:
    image: supabase/postgres:17.4.1.032
    container_name: neo-postgres-eu-west
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      
      # Region-specific metadata
      NEO_REGION_CODE: eu-west-1
      NEO_REGION_NAME: "EU West (GDPR Compliant)"
      NEO_GDPR_COMPLIANT: "true"
      NEO_CONNECTION_TYPE: primary
      
      # Performance tuning
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=en_US.UTF-8"
      POSTGRES_MAX_CONNECTIONS: ${POSTGRES_MAX_CONNECTIONS:-200}
      POSTGRES_SHARED_BUFFERS: ${POSTGRES_SHARED_BUFFERS:-256MB}
      POSTGRES_EFFECTIVE_CACHE_SIZE: ${POSTGRES_EFFECTIVE_CACHE_SIZE:-1GB}
      POSTGRES_WORK_MEM: ${POSTGRES_WORK_MEM:-4MB}
    volumes:
      - postgres_eu_west_data:/var/lib/postgresql/data
      - ./postgres/init-eu/00-init-eu-databases.sql:/docker-entrypoint-initdb.d/00-eu-databases.sql:ro
      - ./postgres/init-eu/02-setup-eu-region.sql:/docker-entrypoint-initdb.d/01-eu-config.sql:ro
    ports:
      - "${POSTGRES_EU_PORT:-5433}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - neo-infrastructure
    command: >
      postgres
      -c shared_preload_libraries='pg_stat_statements'
      -c pg_stat_statements.track=all
      -c pg_stat_statements.max=10000
      -c log_statement='ddl'
      -c log_duration=off
      -c log_min_duration_statement=100
      -c listen_addresses='*'
      -c max_connections=${POSTGRES_MAX_CONNECTIONS:-200}
      -c shared_buffers=${POSTGRES_SHARED_BUFFERS:-256MB}
      -c effective_cache_size=${POSTGRES_EFFECTIVE_CACHE_SIZE:-1GB}
      -c work_mem=${POSTGRES_WORK_MEM:-4MB}
      -c maintenance_work_mem=${POSTGRES_MAINTENANCE_WORK_MEM:-256MB}

  # ==============================================
  # REDIS - Shared Cache & Session Store
  # ==============================================
  redis:
    image: redis:7-alpine
    container_name: neo-redis
    restart: unless-stopped
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory ${REDIS_MAX_MEMORY:-512mb}
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 60
      --timeout 300
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - neo-infrastructure

  # ==============================================
  # KEYCLOAK - Centralized Authentication
  # ==============================================
  keycloak:
    image: quay.io/keycloak/keycloak:26.3.2
    container_name: neo-keycloak
    restart: unless-stopped
    environment:
      # Database configuration (uses US East region by default)
      KC_DB: postgres
      KC_DB_URL_HOST: postgres-us-east
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: ${KEYCLOAK_DB:-neofast_admin}
      KC_DB_USERNAME: ${POSTGRES_USER:-postgres}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      KC_DB_SCHEMA: keycloak
      
      # Keycloak configuration
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME:-localhost}
      KC_HOSTNAME_PORT: ${KEYCLOAK_PORT:-8080}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HTTP_PORT: 8080
      KC_HTTPS_PORT: 8443
      
      # Admin credentials (Keycloak 26+ uses KC_BOOTSTRAP_ADMIN_*)
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN:-admin}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      
      # Performance and features
      KC_FEATURES: token-exchange,admin-fine-grained-authz,scripts,preview
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_LOG_LEVEL: ${KEYCLOAK_LOG_LEVEL:-INFO}
      
      # Development mode settings
      KC_HOSTNAME_DEBUG: true
      PROXY_ADDRESS_FORWARDING: true
      
      # Disable HTTPS requirement for development
      KC_HTTPS_ENABLED: false
      KC_HTTP_RELATIVE_PATH: /
      KC_PROXY: edge
      
      # Additional settings to ensure HTTP works
      KEYCLOAK_FRONTEND_URL: http://${KEYCLOAK_HOSTNAME:-localhost}:${KEYCLOAK_PORT:-8080}/
      KC_HOSTNAME_ADMIN_URL: http://${KEYCLOAK_HOSTNAME:-localhost}:${KEYCLOAK_PORT:-8080}/
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./keycloak/themes:/opt/keycloak/themes:ro
      - ./keycloak/providers:/opt/keycloak/providers:ro
    ports:
      - "${KEYCLOAK_PORT:-8080}:8080"
      - "${KEYCLOAK_HTTPS_PORT:-8443}:8443"
    depends_on:
      postgres-us-east:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s
    networks:
      - neo-infrastructure
    command: start-dev

  # ==============================================
  # DEVELOPMENT TOOLS (Optional)
  # ==============================================
  
  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: neo-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@neo.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      postgres-us-east:
        condition: service_healthy
      postgres-eu-west:
        condition: service_healthy
    networks:
      - neo-infrastructure
    profiles:
      - tools

  # RedisInsight for Redis management
  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: neo-redisinsight
    restart: unless-stopped
    volumes:
      - redisinsight_data:/db
    ports:
      - "${REDISINSIGHT_PORT:-8001}:8001"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - neo-infrastructure
    profiles:
      - tools

# ==============================================
# NETWORKS
# ==============================================
networks:
  neo-infrastructure:
    driver: bridge
    name: neo-infrastructure

# ==============================================
# VOLUMES
# ==============================================
volumes:
  postgres_us_east_data:
    driver: local
    name: neo_postgres_us_east_data
  postgres_eu_west_data:
    driver: local
    name: neo_postgres_eu_west_data
  redis_data:
    driver: local
    name: neo_redis_data
  keycloak_data:
    driver: local
    name: neo_keycloak_data
  pgadmin_data:
    driver: local
    name: neo_pgadmin_data
  redisinsight_data:
    driver: local
    name: neo_redisinsight_data
